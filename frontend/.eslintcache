[{"C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\index.js":"1","C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\layout\\Header.js":"2","C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\components\\Problems.js":"3","C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\components\\Home.js":"4"},{"size":594,"mtime":1606381017155,"results":"5","hashOfConfig":"6"},{"size":2406,"mtime":1606488974263,"results":"7","hashOfConfig":"6"},{"size":5681,"mtime":1606489004411,"results":"8","hashOfConfig":"6"},{"size":4611,"mtime":1606488684279,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1grq7k5",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\index.js",[],"C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\layout\\Header.js",["19"],"C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\components\\Problems.js",["20","21","22"],"C:\\xampp\\htdocs\\codechefProject\\frontend\\src\\components\\Home.js",["23","24"],"import React, { Component } from 'react'\r\n\r\nimport Tags from './Tags';\r\nimport Problems from './Problems';\r\n\r\nimport axiosInstance from '../utils/axiosInstance';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTags: [],\r\n            searchTags: [],\r\n            applyTags: false\r\n        };\r\n    }\r\n\r\n    setSelected = (tag) => {\r\n        console.log(tag);\r\n        if (this.state.selectedTags.some(t => t.name == tag.name))\r\n            return;\r\n\r\n        this.setState((state) => ({\r\n            selectedTags: [...state.selectedTags, tag]\r\n        }));\r\n    }\r\n\r\n    removeSelected = (tag) => {\r\n        if (!this.state.selectedTags.some(t => t.name == tag.name))\r\n            return;\r\n        this.setState(state => ({\r\n            selectedTags: state.selectedTags.filter(curr => curr !== tag)\r\n        }));\r\n    }\r\n\r\n    setApplyTags = (change) => {\r\n        this.setState({\r\n            applyTags: change\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    handleOnSearch = (name) => {\r\n        let req_url = \"/api/tags\";\r\n        let params = {\r\n            limit: 5,// hardcoded for now\r\n            name: name,\r\n            token: localStorage.getItem('token')\r\n        }\r\n\r\n        axiosInstance.get(req_url, { params })\r\n            .then(res => {\r\n                let data = res.data.data;\r\n                this.setState({\r\n                    searchTags: data.map(({ id, name, ...rest }) => ({ id, name }))\r\n                });\r\n            }).catch(err => {\r\n                alert(err.response.data.data);\r\n            });\r\n    }\r\n\r\n    handleOnSelect = ({ id, name }) => {\r\n        let params = {\r\n            token: localStorage.getItem('token')\r\n        }\r\n        axiosInstance.get(`/api/tag/${name}`, { params })\r\n            .then(res => {\r\n                this.setSelected(res.data.data);\r\n            }).catch(err => {\r\n                alert(err.response.data.data);\r\n            });\r\n    }\r\n\r\n    handleOnFocus = () => {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-4 ml-4 mr-4\">\r\n                <h2 className=\"text-center text-info\">Welcome to Programming Practice App</h2>\r\n                <div className=\"row\">\r\n                    <h3 className=\"col-7 ml-6 text-center\">Select Tags</h3>\r\n                    <div class=\"form-inline my-2 my-lg-0\">\r\n                        {/* <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Tags\" aria-label=\"Search\" /> */}\r\n                        <div style={{ width: 250, zIndex: 100000 }}>\r\n                            <ReactSearchAutocomplete\r\n                                items={this.state.searchTags}\r\n                                onSearch={this.handleOnSearch}\r\n                                useCaching={false}\r\n                                onSelect={this.handleOnSelect}\r\n                                onFocus={this.handleOnFocus}\r\n                                placeholder=\"Search Tags\"\r\n                                autoFocus\r\n                            />\r\n                        </div>\r\n                        {/* <button class=\"btn btn-outline-info my-2 my-sm-0 m-1\">Add</button> */}\r\n                        <button onClick={(e) => this.setApplyTags(true)} className=\"btn btn-outline-info my-2 my-sm-0 m-1\">Apply Tags</button>\r\n                    </div>\r\n                </div><br />\r\n                <h5 className=\"text-center\">\r\n                    Selected Tags: {this.state.selectedTags.map(tag =>\r\n                    <div className=\"d-inline-block m-2\">\r\n                        <span className=\"bg-light p-1 rounded\" data-toggle=\"tooltip\" data-placement=\"top\" role=\"button\"\r\n                            title={`Problem Count: ${tag.problem_count}, Type: ${tag.type}`}>{tag.name}</span>\r\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" onClick={() => this.removeSelected(tag)}>\r\n                            <span>&times;</span>\r\n                        </button>\r\n                    </div>\r\n                )}</h5>\r\n                <hr />\r\n\r\n                <div className=\"row\">\r\n                    <Tags setSelected={this.setSelected} isAuthenticated={this.props.isAuthenticated} />\r\n                    <Problems isAuthenticated={this.props.isAuthenticated} selectedTags={this.state.selectedTags} applyTags={this.state.applyTags} setApplyTags={this.setApplyTags} />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n",{"ruleId":"25","severity":1,"message":"26","line":25,"column":53,"nodeType":"27","messageId":"28","endLine":25,"endColumn":55},{"ruleId":"25","severity":1,"message":"29","line":29,"column":24,"nodeType":"27","messageId":"28","endLine":29,"endColumn":26},{"ruleId":"25","severity":1,"message":"26","line":99,"column":53,"nodeType":"27","messageId":"28","endLine":99,"endColumn":55},{"ruleId":"30","severity":1,"message":"31","line":124,"column":132,"nodeType":"32","endLine":124,"endColumn":147},{"ruleId":"25","severity":1,"message":"26","line":22,"column":54,"nodeType":"27","messageId":"28","endLine":22,"endColumn":56},{"ruleId":"25","severity":1,"message":"26","line":31,"column":55,"nodeType":"27","messageId":"28","endLine":31,"endColumn":57},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]